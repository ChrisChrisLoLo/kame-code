{"ast":null,"code":"import { TokenType } from \"./token-type\";\nexport class Token {\n  constructor(type, lexeme, literal, line) {\n    this.type = type;\n    this.lexeme = lexeme;\n    this.literal = literal;\n    this.line = line;\n  }\n\n  toString() {\n    return `${TokenType[this.type]} ${this.lexeme} ${this.literal}`;\n  }\n\n}","map":{"version":3,"sources":["/home/chriz/Documents/kame-code/src/logic/tslox/token.ts"],"names":["TokenType","Token","constructor","type","lexeme","literal","line","toString"],"mappings":"AAAA,SAASA,SAAT,QAA0B,cAA1B;AAIA,OAAO,MAAMC,KAAN,CAAY;AACjBC,EAAAA,WAAW,CACAC,IADA,EAEAC,MAFA,EAGAC,OAHA,EAIAC,IAJA,EAKT;AAAA,SAJSH,IAIT,GAJSA,IAIT;AAAA,SAHSC,MAGT,GAHSA,MAGT;AAAA,SAFSC,OAET,GAFSA,OAET;AAAA,SADSC,IACT,GADSA,IACT;AAAE;;AAEJC,EAAAA,QAAQ,GAAW;AACjB,WAAQ,GAAEP,SAAS,CAAC,KAAKG,IAAN,CAAY,IAAG,KAAKC,MAAO,IAAG,KAAKC,OAAQ,EAA9D;AACD;;AAVgB","sourcesContent":["import { TokenType } from \"./token-type\"\n\nexport type Literal = number | string | boolean | null\n\nexport class Token {\n  constructor(\n    readonly type: TokenType,\n    readonly lexeme: string,\n    readonly literal: Literal,\n    readonly line: number\n  ) {}\n\n  toString(): string {\n    return `${TokenType[this.type]} ${this.lexeme} ${this.literal}`\n  }\n}\n"]},"metadata":{},"sourceType":"module"}