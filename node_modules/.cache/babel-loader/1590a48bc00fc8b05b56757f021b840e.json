{"ast":null,"code":"export let TokenType;\n\n(function (TokenType) {\n  TokenType[TokenType[\"LEFT_PAREN\"] = 0] = \"LEFT_PAREN\";\n  TokenType[TokenType[\"RIGHT_PAREN\"] = 1] = \"RIGHT_PAREN\";\n  TokenType[TokenType[\"LEFT_BRACE\"] = 2] = \"LEFT_BRACE\";\n  TokenType[TokenType[\"RIGHT_BRACE\"] = 3] = \"RIGHT_BRACE\";\n  TokenType[TokenType[\"COMMA\"] = 4] = \"COMMA\";\n  TokenType[TokenType[\"DOT\"] = 5] = \"DOT\";\n  TokenType[TokenType[\"MINUS\"] = 6] = \"MINUS\";\n  TokenType[TokenType[\"PLUS\"] = 7] = \"PLUS\";\n  TokenType[TokenType[\"SEMICOLON\"] = 8] = \"SEMICOLON\";\n  TokenType[TokenType[\"SLASH\"] = 9] = \"SLASH\";\n  TokenType[TokenType[\"STAR\"] = 10] = \"STAR\";\n  TokenType[TokenType[\"QUESTION\"] = 11] = \"QUESTION\";\n  TokenType[TokenType[\"COLON\"] = 12] = \"COLON\";\n  TokenType[TokenType[\"BANG\"] = 13] = \"BANG\";\n  TokenType[TokenType[\"BANG_EQUAL\"] = 14] = \"BANG_EQUAL\";\n  TokenType[TokenType[\"EQUAL\"] = 15] = \"EQUAL\";\n  TokenType[TokenType[\"EQUAL_EQUAL\"] = 16] = \"EQUAL_EQUAL\";\n  TokenType[TokenType[\"GREATER\"] = 17] = \"GREATER\";\n  TokenType[TokenType[\"GREATER_EQUAL\"] = 18] = \"GREATER_EQUAL\";\n  TokenType[TokenType[\"LESS\"] = 19] = \"LESS\";\n  TokenType[TokenType[\"LESS_EQUAL\"] = 20] = \"LESS_EQUAL\";\n  TokenType[TokenType[\"IDENTIFIER\"] = 21] = \"IDENTIFIER\";\n  TokenType[TokenType[\"STRING\"] = 22] = \"STRING\";\n  TokenType[TokenType[\"NUMBER\"] = 23] = \"NUMBER\";\n  TokenType[TokenType[\"AND\"] = 24] = \"AND\";\n  TokenType[TokenType[\"CLASS\"] = 25] = \"CLASS\";\n  TokenType[TokenType[\"ELSE\"] = 26] = \"ELSE\";\n  TokenType[TokenType[\"FALSE\"] = 27] = \"FALSE\";\n  TokenType[TokenType[\"FUN\"] = 28] = \"FUN\";\n  TokenType[TokenType[\"FOR\"] = 29] = \"FOR\";\n  TokenType[TokenType[\"IF\"] = 30] = \"IF\";\n  TokenType[TokenType[\"NIL\"] = 31] = \"NIL\";\n  TokenType[TokenType[\"OR\"] = 32] = \"OR\";\n  TokenType[TokenType[\"PRINT\"] = 33] = \"PRINT\";\n  TokenType[TokenType[\"RETURN\"] = 34] = \"RETURN\";\n  TokenType[TokenType[\"SUPER\"] = 35] = \"SUPER\";\n  TokenType[TokenType[\"THIS\"] = 36] = \"THIS\";\n  TokenType[TokenType[\"TRUE\"] = 37] = \"TRUE\";\n  TokenType[TokenType[\"VAR\"] = 38] = \"VAR\";\n  TokenType[TokenType[\"WHILE\"] = 39] = \"WHILE\";\n  TokenType[TokenType[\"BREAK\"] = 40] = \"BREAK\";\n  TokenType[TokenType[\"EOF\"] = 41] = \"EOF\";\n})(TokenType || (TokenType = {}));","map":{"version":3,"sources":["/home/chriz/Documents/kame-code/src/logic/tslox/token-type.ts"],"names":["TokenType"],"mappings":"AAAA,WAAYA,SAAZ;;WAAYA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;GAAAA,S,KAAAA,S","sourcesContent":["export enum TokenType {\n  // Single-character tokens.\n  LEFT_PAREN,\n  RIGHT_PAREN,\n  LEFT_BRACE,\n  RIGHT_BRACE,\n  COMMA,\n  DOT,\n  MINUS,\n  PLUS,\n  SEMICOLON,\n  SLASH,\n  STAR,\n  QUESTION,\n  COLON,\n\n  // One or two character tokens.\n  BANG,\n  BANG_EQUAL,\n  EQUAL,\n  EQUAL_EQUAL,\n  GREATER,\n  GREATER_EQUAL,\n  LESS,\n  LESS_EQUAL,\n\n  // Literals.\n  IDENTIFIER,\n  STRING,\n  NUMBER,\n\n  // Keywords.\n  AND,\n  CLASS,\n  ELSE,\n  FALSE,\n  FUN,\n  FOR,\n  IF,\n  NIL,\n  OR,\n  PRINT,\n  RETURN,\n  SUPER,\n  THIS,\n  TRUE,\n  VAR,\n  WHILE,\n  BREAK,\n\n  EOF\n}\n"]},"metadata":{},"sourceType":"module"}